/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplikasigudang;

import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Axioo
 */
public class FDataTransaksi extends javax.swing.JFrame {

    /**
     * Creates new form FDataTransaksi
     */
    public FDataTransaksi() {
        initComponents();
        load_data();
        IDOtomatis();
    }
    
    public void load_data(){
        Connection kon=koneksi.koneksiDb();
        Object header[]={"ID TRANSAKSI","ID PRODUK","NAMA PEMBELI","JENIS KELAMIN","ALAMAT","JUMLAH","TOTAL BAYAR","TANGGAL"};
        DefaultTableModel data=new DefaultTableModel(null,header);
        TabelTransaksi.setModel(data);
        String sql_data="SELECT * FROM tbl_transaksi";
        
        try
        {
            Statement st=kon.createStatement();
            ResultSet rs=st.executeQuery(sql_data);
            while(rs.next())
            {
                String d1=rs.getString(1);
                String d2=rs.getString(2);
                String d3=rs.getString(3);
                String d4=rs.getString(4);
                String d5=rs.getString(5);
                String d6=rs.getString(6);
                String d7=rs.getString(7);
                String d8=rs.getString(8);
                
                String d[]={d1,d2,d3,d4,d5,d6,d7,d8};
                data.addRow(d);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void IDOtomatis(){
        
        try
        {
            Connection kon=koneksi.koneksiDb();
            Statement st=kon.createStatement();
            String sql_id="SELECT * FROM tbl_transaksi ORDER BY id_transaksi";
            ResultSet rs=st.executeQuery(sql_id);
            if(rs.next())
            {
                String id_produk=rs.getString("id_transaksi").substring(1);
                String id_transaksi = null;
                String AN=""+(Integer.parseInt(id_transaksi)+1);
                String Nol="";
                if(AN.length()==1)
                {
                    Nol="0000";
                }
                else if(AN.length()==2)
                {
                    Nol="000";
                }
                else if(AN.length()==3)
                {
                    Nol="00";
                }
                IDTRAN.setText("A"+Nol+AN);
            }
            else
            {
                IDTRAN.setText("A00001");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        IDTRAN = new javax.swing.JTextField();
        IDPRO_TRAN = new javax.swing.JTextField();
        NAMA_PEMB = new javax.swing.JTextField();
        JK = new javax.swing.JTextField();
        ALAMAT = new javax.swing.JTextField();
        JUMLAH = new javax.swing.JTextField();
        TOT_BYR = new javax.swing.JTextField();
        TGL = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelTransaksi = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("DATA TRANSAKSI");

        jLabel2.setText("ID Transaksi");

        jLabel3.setText("ID_Produk");

        jLabel4.setText("Nama Pembeli");

        jLabel5.setText("Jenis Kelamin");

        jLabel6.setText("Alamat");

        jLabel7.setText("Jumlah");

        jLabel8.setText("Total Bayar");

        jLabel9.setText("Tanggal");

        TabelTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TabelTransaksi);

        jButton3.setText("HAPUS");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("KELUAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("SIMPAN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("EDIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setText("Cari Berdasarkan Nama");

        jButton5.setText("CARI");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("REFRESH");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("CETAK LAPORAN");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IDTRAN)
                            .addComponent(IDPRO_TRAN)
                            .addComponent(NAMA_PEMB)
                            .addComponent(JK)
                            .addComponent(ALAMAT)
                            .addComponent(JUMLAH)
                            .addComponent(TOT_BYR)
                            .addComponent(TGL, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 931, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(454, 454, 454)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jButton7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton6)))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(IDTRAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(IDPRO_TRAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(NAMA_PEMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(JK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ALAMAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(JUMLAH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(TOT_BYR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(TGL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Mengambil nilai dari kolom input
        String id_transaksi = IDTRAN.getText();
        String id_produk = IDPRO_TRAN.getText();
        String nama_pembeli = NAMA_PEMB.getText();
        String jenis_kelamin = JK.getText();
        String alamat = ALAMAT.getText();
        String jumlah = JUMLAH.getText();
        String total_bayar = TOT_BYR.getText();
        String tanggal = TGL.getText();

        // Memasukkan data ke dalam database MySQL
        try {
            Connection kon = koneksi.koneksiDb();
            Statement st = kon.createStatement();
            
            // Query untuk menyimpan data ke dalam tabel tbl_transaksi
            String sql_insert = "INSERT INTO tbl_transaksi (id_transaksi, id_produk, nama_pembeli, jen_kelamin, alamat, jumlah, total_bayar, tanggal) "
                    + "VALUES ('" + id_transaksi + "', '" + id_produk + "', '" + nama_pembeli + "', '" + jenis_kelamin + "', '" + alamat + "', '" + jumlah + "', '" + total_bayar + "', '" + tanggal + "')";

            // Eksekusi query
            st.executeUpdate(sql_insert);

            // Tampilkan pesan sukses
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan");
            
            // Bersihkan kolom input
            IDTRAN.setText("");
            IDPRO_TRAN.setText("");
            NAMA_PEMB.setText("");
            JK.setText("");
            ALAMAT.setText("");
            JUMLAH.setText("");
            TOT_BYR.setText("");
            TGL.setText("");

            // Perbarui tabel untuk menampilkan data yang telah diperbarui
            load_data();
            IDOtomatis();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        new Gudang_Apk().show();
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Mendapatkan baris yang dipilih dari tabel
        int selectedRow = TabelTransaksi.getSelectedRow();

        // Memastikan baris terpilih sebelum melanjutkan
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit");
            return;
        }
        
        // Mendapatkan nilai kolom dari baris terpilih
        String id_transaksi = TabelTransaksi.getValueAt(selectedRow, 0).toString();
        String id_produk = TabelTransaksi.getValueAt(selectedRow, 1).toString();
        String nama_pembeli = TabelTransaksi.getValueAt(selectedRow, 2).toString();
        String jenis_kelamin = TabelTransaksi.getValueAt(selectedRow, 3).toString();
        String alamat = TabelTransaksi.getValueAt(selectedRow, 4).toString();
        String jumlah = TabelTransaksi.getValueAt(selectedRow, 5).toString();
        String total_bayar = TabelTransaksi.getValueAt(selectedRow, 6).toString();
        String tanggal = TabelTransaksi.getValueAt(selectedRow, 7).toString();

        // Menampilkan dialog untuk memasukkan nilai yang baru
        String newIdProduk = JOptionPane.showInputDialog(this, "Masukkan ID Produk Baru:", id_produk);
        String newNamaPembeli = JOptionPane.showInputDialog(this, "Masukkan Nama Pembeli Baru:", nama_pembeli);
        String newJenisKelamin = JOptionPane.showInputDialog(this, "Masukkan Jenis Kelamin Baru:", jenis_kelamin);
        String newAlamat = JOptionPane.showInputDialog(this, "Masukkan Alamat Baru:", alamat);
        String newJumlah = JOptionPane.showInputDialog(this, "Masukkan Jumlah Baru:", jumlah);
        String newTotalBayar = JOptionPane.showInputDialog(this, "Masukkan Total Bayar Baru:", total_bayar);
        String newTanggal = JOptionPane.showInputDialog(this, "Masukkan Tanggal Baru:", tanggal);

        // Memastikan bahwa pengguna memasukkan nilai yang valid dan tidak membatalkan input
        if (newIdProduk != null && !newIdProduk.isEmpty() && newNamaPembeli != null && !newNamaPembeli.isEmpty()
                && newJenisKelamin != null && !newJenisKelamin.isEmpty() && newAlamat != null && !newAlamat.isEmpty()
                && newJumlah != null && !newJumlah.isEmpty() && newTotalBayar != null && !newTotalBayar.isEmpty()
                && newTanggal != null && !newTanggal.isEmpty()) {

            // Update data ke dalam database MySQL
            try {
                Connection kon = koneksi.koneksiDb();
                Statement st = kon.createStatement();
                String sql_update = "UPDATE tbl_transaksi SET id_produk = '" + newIdProduk + "', nama_pembeli = '" + newNamaPembeli +
                                    "', jen_kelamin = '" + newJenisKelamin + "', alamat = '" + newAlamat +
                                    "', jumlah = '" + newJumlah + "', total_bayar = '" + newTotalBayar +
                                    "', tanggal = '" + newTanggal + "' WHERE id_transaksi = '" + id_transaksi + "'";
                st.executeUpdate(sql_update);
                
                // Tampilkan pesan sukses
                JOptionPane.showMessageDialog(this, "Data berhasil diupdate");

                // Perbarui tabel untuk menampilkan data yang telah diperbarui
                load_data();
                IDOtomatis();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Mengambil nilai dari kolom input
        int selectedRow = TabelTransaksi.getSelectedRow();

        // Pastikan baris terpilih
        if (selectedRow != -1) {
            String id_transaksi = TabelTransaksi.getValueAt(selectedRow, 0).toString();

            // Konfirmasi penghapusan data
            int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Hapus Data", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    Connection kon = koneksi.koneksiDb();
                    Statement st = kon.createStatement();
                    
                    // Query untuk menghapus data dari tabel tbl_transaksi
                    String sql_delete = "DELETE FROM tbl_transaksi WHERE id_transaksi = '" + id_transaksi + "'";

                    // Eksekusi query
                    st.executeUpdate(sql_delete);

                    // Tampilkan pesan sukses
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");

                    // Bersihkan kolom input
                    IDTRAN.setText("");
                    IDPRO_TRAN.setText("");
                    NAMA_PEMB.setText("");
                    JK.setText("");
                    ALAMAT.setText("");
                    JUMLAH.setText("");
                    TOT_BYR.setText("");
                    TGL.setText("");
                    
                    // Perbarui tabel untuk menampilkan data yang telah diperbarui
                    load_data();
                    IDOtomatis();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Mendapatkan kata kunci pencarian dari TextField
        String keyword = jTextField1.getText().trim();

        // Memastikan bahwa kata kunci tidak kosong sebelum melanjutkan
        if (!keyword.isEmpty()) {
            // Melakukan pencarian berdasarkan nama pembeli di database MySQL
            try {
                Connection kon = koneksi.koneksiDb();
                Statement st = kon.createStatement();
                String sql_search = "SELECT * FROM tbl_transaksi WHERE nama_pembeli LIKE '%" + keyword + "%'";
                ResultSet rs = st.executeQuery(sql_search);
                
                // Mengisi tabel dengan hasil pencarian
                DefaultTableModel data = new DefaultTableModel();
                data.addColumn("ID TRANSAKSI");
                data.addColumn("ID PRODUK");
                data.addColumn("NAMA PEMBELI");
                data.addColumn("JENIS KELAMIN");
                data.addColumn("ALAMAT");
                data.addColumn("JUMLAH");
                data.addColumn("TOTAL BAYAR");
                data.addColumn("TANGGAL");

                while (rs.next()) {
                    String d1 = rs.getString(1);
                    String d2 = rs.getString(2);
                    String d3 = rs.getString(3);
                    String d4 = rs.getString(4);
                    String d5 = rs.getString(5);
                    String d6 = rs.getString(6);
                    String d7 = rs.getString(7);
                    String d8 = rs.getString(8);
                    String[] d = {d1, d2, d3, d4, d5, d6, d7, d8};
                    data.addRow(d);
                }
                
                // Menampilkan hasil pencarian di tabel
                TabelTransaksi.setModel(data);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
        } else {
            // Jika kata kunci kosong, tampilkan pesan peringatan
            JOptionPane.showMessageDialog(this, "Masukkan kata kunci pencarian");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Memanggil metode untuk merefresh data
            refreshData();
        }                                        

        // Metode untuk merefresh data
        private void refreshData() {
            // Mengosongkan kolom-kolom textfield
            IDTRAN.setText("");
            IDPRO_TRAN.setText("");
            NAMA_PEMB.setText("");
            JK.setText("");
            ALAMAT.setText("");
            JUMLAH.setText("");
            TOT_BYR.setText("");
            TGL.setText("");
            
            // Memanggil metode load_data() untuk memuat kembali data dari database
            load_data();

            // Memanggil metode IDOtomatis() untuk memperbarui ID otomatis
            IDOtomatis();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            // Memuat JasperReport dari file .jasper yang telah dikompilasi
            InputStream reportStream = getClass().getResourceAsStream("/report/reportTransaksi.jasper");
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(reportStream);

            // Menyiapkan parameter untuk laporan (jika diperlukan)
            Map<String, Object> parameters = new HashMap<>();

            // Mendapatkan koneksi ke database Anda (sesuaikan sesuai dengan pengaturan database Anda)
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbase_gudang", "root", "");

            // Menghasilkan objek JasperPrint
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);

            // Menutup koneksi database
            conn.close();

            // Menampilkan laporan menggunakan JasperViewer
            JasperViewer.viewReport(jasperPrint, false);
        } catch (JRException | java.sql.SQLException ex) {
            // Menghandle exception dengan tepat (misalnya, menampilkan pesan error)
            JOptionPane.showMessageDialog(this, "Error generating report: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FDataTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FDataTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FDataTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FDataTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FDataTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ALAMAT;
    private javax.swing.JTextField IDPRO_TRAN;
    private javax.swing.JTextField IDTRAN;
    private javax.swing.JTextField JK;
    private javax.swing.JTextField JUMLAH;
    private javax.swing.JTextField NAMA_PEMB;
    private javax.swing.JTextField TGL;
    private javax.swing.JTextField TOT_BYR;
    private javax.swing.JTable TabelTransaksi;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
